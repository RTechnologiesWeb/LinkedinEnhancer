# Use an official Python runtime as a parent image
FROM python:3.12-slim

# Set environment variables to prevent Python from writing pyc files to disk and to ensure stdout and stderr are sent straight to the terminal (useful for logging)
ENV PYTHONDONTWRITEBYTECODE 1
ENV PYTHONUNBUFFERED 1

# Set up a working directory
WORKDIR /app

# Install system dependencies
RUN apt-get update && apt-get install -y \
    build-essential \
    default-libmysqlclient-dev \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Install pipenv for managing Python packages
RUN pip install --upgrade pip

# Copy the application code to the Docker container
COPY . /app

# Install Python dependencies
RUN python -m venv /opt/venv && \
    . /opt/venv/bin/activate && \
    pip install -r requirements.txt

# Expose the port the app runs on
EXPOSE 8000

# Set environment variables for the application (optional)
# You can remove these lines and pass them as environment variables when running the container
# ENV DJANGO_SECRET=your_secret_key
# ENV OPENAI_API_KEY=your_openai_api_key
# ENV MISTRAL_API_KEY=your_mistral_api_key

# Run migrations and start the Django development server
CMD . /opt/venv/bin/activate && python manage.py migrate && python manage.py runserver 0.0.0.0:8000
